// plugins
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

mainClassName = "is.skittles.tictactoe.TicTacToeWeb"

// repositories
repositories {
    jcenter()
}

jar {
     manifest {
         attributes("Main-Class": "is.skittles.tictactoe.TicTacToe")
    }
}

test {
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

jacoco {

}

sourceSets {
    selenium
    seleniumXvfb
}

// dependencies
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'

    testCompile 'junit:junit:4.11'
    testCompile "org.mockito:mockito-core:1.+"

    compile 'com.sparkjava:spark-core:2.0.0'
    compile 'com.sparkjava:spark-template-mustache:1.0.0'

    seleniumCompile 'junit:junit:4.11'
    seleniumCompile 'org.seleniumhq.selenium:selenium-java:2.44.0'
    seleniumXvfbCompile 'junit:junit:4.11'
    seleniumXvfbCompile 'org.seleniumhq.selenium:selenium-java:2.44.0'
}

task selenium(type: Test, dependsOn: installApp) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath

    ant.condition(property: "os", value: "windows") { os(family: "windows") }
    ant.condition(property: "os", value: "unix" ) { os(family: "unix") }

    doFirst {
        switch(ant.properties.os) {
            case 'unix':
                'build/install/TicTacToe/bin/TicTacToe &'.execute()
                break
            case 'windows':
                'build\\install\\TicTacToe\\bin\\TicTacToe.bat'.execute()
                break
        }
    }
}

task seleniumXvfb(type: Test, dependsOn: installApp) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath
    environment "DISPLAY", ":99"

    doFirst {
        'bin/xvfb start'.execute()
        'build/install/TicTacToe/bin/TicTacToe &'.execute()
    }
    doLast {
        'bin/xvfb stop'.execute()
    }
}

task stage {
    dependsOn installApp
}
